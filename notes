#!/bin/bash

set -e

# Default args
verbose='false'
recursive='false'
input=$(pwd)
output=$(pwd)

# Return the usage of the soft
usage() {
cat << EOF
Notes
Compile a PDF file for each course form markdown files.

Usage: notes [-i input_directory] [-o output_directory] [-v] [-r] [-h]

Options:
    -i input_directory: provide the input directory in which the notes are
    -o output_directory: provide the output directory in which the PDF file will be compiled
    -v: enable verbose mode
    -r: enable recursive mode (not supported yet)
    -h: display this help
EOF
}

# Get every notes related to a cursus sorted by date
getnotes() {
    ack -n "> Date: " . | \
    while read line; do
        course=$(echo "$line" | sed 's/\([^ ]*\) .*/\1/')
        file=$(echo "$line" | sed 's/\([^:]*\):2:>.*$/\1/')
        date=$(echo "$line" | sed 's/[^:]*:2:> Date: \(.*$\)/\1/')
        echo "$course$date $file"
    done|\
    sort -n|\
    while read line; do
        file=$(echo "$line" | sed 's/[^ ]* \(.*\)/\1/')
        echo "$file"
    done
    unset course file date
}


# From the getnotes(), compile a PDF file
# $1 is the output
# $2 is the notes files
makepdf() {
    pandoc -s -S --normalize -o "${1}.pdf" $2
    if [ "$verbose" == 'true' ]; then
        echo "${1}.pdf created"
    fi
}

# Main function
# $1 is the input
main() {
    # Check the current directory if any md files is in there
    if ls $1/*.md &> /dev/null; then
        notes=$(getnotes)

        if [ "$notes" != "" ]; then
            output_file="$output/"$(basename "$output")
            oldifs=$IFS
            IFS=$'\n'
            makepdf "$output_file" "$notes"
            IFS=$oldifs

        fi
        unset notes output_file oldifs
    fi

    # Go inside each directory check any md files
    for each in $1/*; do
        if ls $each/*.md &> /dev/null; then
            cd "$each"
            notes=$(getnotes)

            if [ "$notes" != "" ]; then
                output_file="$output/"$(basename "$each")
                oldifs=$IFS
                IFS=$'\n'
                makepdf "$output_file" "$notes"
                IFS=$oldifs

            fi
            unset notes output_file oldifs
        elif [ -e "$each" ]; then
            # Usage of recursivity ?
            main "$each"
        fi
    done
}

# Get args
while getopts "hvo:i:r" flag; do
    case "${flag}" in
        h) usage; exit 0 ;;
        v) verbose='true'; break ;;
        r) recursive='true'; break ;;
        o) output=$(readlink -f "${OPTARG}"); break ;;
        i) input=$(readlink -f "${OPTARG}"); break ;;
        *) echo "Unexpected option ${flag}"; exit 0 ;;
    esac
done
main "$input"
